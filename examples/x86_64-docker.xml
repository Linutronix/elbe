<ns0:RootFileSystem xmlns:ns0="https://www.linutronix.de/projects/Elbe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" created="2009-05-20T08:50:56" revision="6" xsi:schemaLocation="https://www.linutronix.de/projects/Elbe dbsfed.xsd">
	<project>
		<name>debian docker base image</name>
		<version>1.0</version>
		<description>
			This can be built as variant 'minimal' which builds an image
			that just contains a bash and its runtime dependencies, man-pages, etc.
			If built without variant 'minimal' the resulting image contains
			all that is needed to run apt, but no init daemon.

			These images are designed for running inside a docker container.
			Use 'docker import docker-debianmin.tgz debianmin' to load
			the image into docker and 'docker run -ti debianmin /bin/bash'
			to run a bash inside the image.
		</description>
		<buildtype>amd64</buildtype>
		<mirror>
			<primary_host>ftp.de.debian.org</primary_host>
			<primary_path>/debian</primary_path>
			<primary_proto>http</primary_proto>
			<options>
				<option>check-valid-until=yes</option>
			</options>
			<url-list>
				<url>
					<binary>http://security.debian.org buster/updates main</binary>
					<source>http://security.debian.org buster/updates main</source>
					<options>
						<option>check-date=no</option>
					</options>
				</url>
			</url-list>
		</mirror>
		<suite>buster</suite>
	</project>
	<target>
		<hostname>debianmin</hostname>
		<domain>docker</domain>
		<passwd>docker</passwd>
		<debootstrap>
			<variant>minbase</variant>
		</debootstrap>
		<package>
			<tar>
				<name>docker-debianmin.tgz</name>
			</tar>
		</package>
		<diet variant='minimal' />
		<pkg-list variant='minimal'>
			<pkg>bash</pkg>
		</pkg-list>
	</target>
	<src-cdrom>
		<size>50M</size>
		<src-opts>
			<publisher>TUX</publisher>
		</src-opts>
	</src-cdrom>
</ns0:RootFileSystem>
